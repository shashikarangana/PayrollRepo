/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package lk.ijse.payroll.view;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import lk.ijse.payroll.common.IdGenerater;
import lk.ijse.payroll.controller.DesignationController;
import lk.ijse.payroll.controller.EmployeeAttendanceController;
import lk.ijse.payroll.controller.EmployeeRegisterController;
import lk.ijse.payroll.model.AttendanceDTO;
import lk.ijse.payroll.model.DesignationDTO;
import lk.ijse.payroll.model.EmployeeDTO;

/**
 *
 * @author Shashika
 */
public class EmployeeRegister extends javax.swing.JPanel {
    
    private boolean update=false;
    private String gender ,mStatus ,designation ,designationId ,joinDate;
    DesignationDTO selectedDesignation = null;
    ArrayList<DesignationDTO> designations = null;
    ButtonGroup bg;
    ButtonGroup btng;
    DefaultTableModel dtm;
  

    /** Creates new form Employee */
    public EmployeeRegister() {
        initComponents();
        groupButtonGrnder();
        groupButtonStatus();
        LoadTblAllEmployees();
        LoadEmployeeDesignations();
        generateEmployeeId();
        
        jTableEmployee.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (jTableEmployee.getSelectedRow() == -1) {
                    update=false;
                    clearTextFields();
                    return;
                }
                TxtEmployeeId.setText((String) jTableEmployee.getValueAt(jTableEmployee.getSelectedRow(), 0));
                TxtEmployeeId.setEnabled(false);
                TxtEmpName.setText((String) jTableEmployee.getValueAt(jTableEmployee.getSelectedRow(), 1));
                ComboBoxDesignation.setSelectedItem((String) jTableEmployee.getValueAt(jTableEmployee.getSelectedRow(), 2)); 
                TxtSalary.setText(jTableEmployee.getValueAt(jTableEmployee.getSelectedRow(), 3).toString());
                
                if(jTableEmployee.getValueAt(jTableEmployee.getSelectedRow(), 4).equals("Married")){
                    jRadioButtonMarried.setSelected(true);
                    jRadioButtonMarried.setEnabled(false);
                }else{
                    jRadioButtonSingle.setSelected(true);
                    jRadioButtonSingle.setEnabled(false);
                }
                TxtAddress.setText((String) jTableEmployee.getValueAt(jTableEmployee.getSelectedRow(), 5));
                TxtContactNum.setText((String) jTableEmployee.getValueAt(jTableEmployee.getSelectedRow(), 6));
                
               /* DateTimeFormatter formatter=DateTimeFormatter.ofPattern("dd-mm-yyyy");
                LocalDate localDate=LocalDate.parse(EmployeeDTO.getJo);
                DatePickerJoinDate.setValue(localDate);*/
               DatePickerJoinDate.setEnabled(false);
//                joinDate = ""+(java.sql.Date) jTableEmployee.getValueAt(jTableEmployee.getSelectedRow(), 7);
//                dateOfBirth = ""+(java.sql.Date) jTableEmployee.getValueAt(jTableEmployee.getSelectedRow(), 8);
               //DatePickerJoinDate.setDate((java.sql.Date) jTableEmployee.getValueAt(jTableEmployee.getSelectedRow(), 7));
               //DatePickerDOB.setDate((java.sql.Date) jTableEmployee.getValueAt(jTableEmployee.getSelectedRow(), 8));
               TextFieldDateOfBirth.setEnabled(false);
                
                if(jTableEmployee.getValueAt(jTableEmployee.getSelectedRow(), 9).equals("Male")){
                    jRadioButtonMale.setSelected(true);
                    jRadioButtonMale.setEnabled(false);
                }else{
                    jRadioButtonFemale.setSelected(true);
                    jRadioButtonFemale.setEnabled(false);
                }
                LhrTxt.setText(jTableEmployee.getValueAt(jTableEmployee.getSelectedRow(), 10).toString());
                OtrTxt.setText(jTableEmployee.getValueAt(jTableEmployee.getSelectedRow(), 11).toString());
                update = true;
            
            }
            
        });
                
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane1 = new java.awt.ScrollPane();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        Savebtn = new javax.swing.JButton();
        Deletebtn = new javax.swing.JButton();
        BtnClear = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jSeparator14 = new javax.swing.JSeparator();
        ComboBoxDesignation = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jSeparator15 = new javax.swing.JSeparator();
        TxtContactNum = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jSeparator19 = new javax.swing.JSeparator();
        TxtAddress = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jSeparator17 = new javax.swing.JSeparator();
        jLabelEmployeeID = new javax.swing.JLabel();
        jRadioButtonFemale = new javax.swing.JRadioButton();
        TxtEmployeeId = new javax.swing.JTextField();
        jRadioButtonMale = new javax.swing.JRadioButton();
        TxtEmpName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jRadioButtonMarried = new javax.swing.JRadioButton();
        TxtSalary = new javax.swing.JTextField();
        jSeparator16 = new javax.swing.JSeparator();
        jLabelEmployeeName = new javax.swing.JLabel();
        jLabelDesignation = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jRadioButtonSingle = new javax.swing.JRadioButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        DatePickerJoinDate = new org.jdesktop.swingx.JXDatePicker();
        TextFieldDateOfBirth = new com.toedter.calendar.JDateChooser();
        jPanel7 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jSeparator21 = new javax.swing.JSeparator();
        LhrTxt = new javax.swing.JTextField();
        OtrTxt = new javax.swing.JTextField();
        jSeparator22 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableEmployee = new org.jdesktop.swingx.JXTable();

        scrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1156, 760));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator2.setForeground(new java.awt.Color(31, 58, 147));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1630, 10));

        jLabel12.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(31, 58, 147));
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/payroll/asset/icons8_Registration_30px_2.png"))); // NOI18N
        jLabel12.setText(" Employee Registration");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 290, 40));

        jSeparator4.setBackground(new java.awt.Color(210, 215, 211));
        jSeparator4.setForeground(new java.awt.Color(31, 58, 147));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator4.setOpaque(true);
        add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 40));

        Savebtn.setBackground(new java.awt.Color(31, 58, 147));
        Savebtn.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        Savebtn.setForeground(new java.awt.Color(255, 255, 255));
        Savebtn.setText(" Save");
        Savebtn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavebtnActionPerformed(evt);
            }
        });
        add(Savebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 430, 120, 30));

        Deletebtn.setBackground(new java.awt.Color(31, 58, 147));
        Deletebtn.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        Deletebtn.setForeground(new java.awt.Color(255, 255, 255));
        Deletebtn.setText(" Delete");
        Deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletebtnActionPerformed(evt);
            }
        });
        add(Deletebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 430, 120, 30));

        BtnClear.setBackground(new java.awt.Color(31, 58, 147));
        BtnClear.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        BtnClear.setForeground(new java.awt.Color(255, 255, 255));
        BtnClear.setText(" Clear");
        BtnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnClearActionPerformed(evt);
            }
        });
        add(BtnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 430, 120, 30));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Employee Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Light", 1, 14))); // NOI18N
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator14.setBackground(new java.awt.Color(31, 58, 147));
        jSeparator14.setForeground(new java.awt.Color(31, 58, 147));
        jSeparator14.setOpaque(true);
        jPanel6.add(jSeparator14, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 190, -1));

        ComboBoxDesignation.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        ComboBoxDesignation.setForeground(new java.awt.Color(31, 58, 147));
        ComboBoxDesignation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxDesignationActionPerformed(evt);
            }
        });
        jPanel6.add(ComboBoxDesignation, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 190, -1));

        jLabel13.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(31, 58, 147));
        jLabel13.setText("Status");
        jPanel6.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 80, 30));

        jSeparator15.setBackground(new java.awt.Color(31, 58, 147));
        jSeparator15.setForeground(new java.awt.Color(31, 58, 147));
        jSeparator15.setOpaque(true);
        jPanel6.add(jSeparator15, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 190, -1));

        TxtContactNum.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        TxtContactNum.setForeground(new java.awt.Color(31, 58, 147));
        TxtContactNum.setBorder(null);
        TxtContactNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtContactNumActionPerformed(evt);
            }
        });
        TxtContactNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxtContactNumKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtContactNumKeyReleased(evt);
            }
        });
        jPanel6.add(TxtContactNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 100, 190, 30));

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(31, 58, 147));
        jLabel3.setText("Salary");
        jPanel6.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 120, 30));

        jSeparator19.setBackground(new java.awt.Color(31, 58, 147));
        jSeparator19.setForeground(new java.awt.Color(31, 58, 147));
        jSeparator19.setOpaque(true);
        jPanel6.add(jSeparator19, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 130, 190, -1));

        TxtAddress.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        TxtAddress.setForeground(new java.awt.Color(31, 58, 147));
        TxtAddress.setBorder(null);
        TxtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtAddressActionPerformed(evt);
            }
        });
        TxtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtAddressKeyReleased(evt);
            }
        });
        jPanel6.add(TxtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 50, 190, 30));

        jLabel11.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(31, 58, 147));
        jLabel11.setText("Contact Number");
        jPanel6.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, 160, 30));

        jSeparator17.setBackground(new java.awt.Color(31, 58, 147));
        jSeparator17.setForeground(new java.awt.Color(31, 58, 147));
        jSeparator17.setOpaque(true);
        jPanel6.add(jSeparator17, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 80, 190, -1));

        jLabelEmployeeID.setBackground(new java.awt.Color(1, 50, 67));
        jLabelEmployeeID.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabelEmployeeID.setForeground(new java.awt.Color(31, 58, 147));
        jLabelEmployeeID.setText("Employee ID");
        jPanel6.add(jLabelEmployeeID, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 100, 30));

        jRadioButtonFemale.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButtonFemale.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jRadioButtonFemale.setForeground(new java.awt.Color(31, 58, 147));
        jRadioButtonFemale.setText("Female");
        jRadioButtonFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonFemaleActionPerformed(evt);
            }
        });
        jPanel6.add(jRadioButtonFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 250, 90, -1));

        TxtEmployeeId.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        TxtEmployeeId.setForeground(new java.awt.Color(31, 58, 147));
        TxtEmployeeId.setBorder(null);
        TxtEmployeeId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtEmployeeIdActionPerformed(evt);
            }
        });
        jPanel6.add(TxtEmployeeId, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 190, 30));

        jRadioButtonMale.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButtonMale.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jRadioButtonMale.setForeground(new java.awt.Color(31, 58, 147));
        jRadioButtonMale.setText("Male");
        jRadioButtonMale.setName(""); // NOI18N
        jRadioButtonMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMaleActionPerformed(evt);
            }
        });
        jPanel6.add(jRadioButtonMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 250, 70, -1));

        TxtEmpName.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        TxtEmpName.setForeground(new java.awt.Color(31, 58, 147));
        TxtEmpName.setBorder(null);
        TxtEmpName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtEmpNameActionPerformed(evt);
            }
        });
        TxtEmpName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtEmpNameKeyReleased(evt);
            }
        });
        jPanel6.add(TxtEmpName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 190, 30));

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(31, 58, 147));
        jLabel8.setText("Date Of Birth");
        jPanel6.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 200, 130, 30));

        jRadioButtonMarried.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButtonMarried.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jRadioButtonMarried.setForeground(new java.awt.Color(31, 58, 147));
        jRadioButtonMarried.setText("Married");
        jRadioButtonMarried.setName(""); // NOI18N
        jRadioButtonMarried.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMarriedActionPerformed(evt);
            }
        });
        jPanel6.add(jRadioButtonMarried, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, 100, -1));

        TxtSalary.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        TxtSalary.setForeground(new java.awt.Color(31, 58, 147));
        TxtSalary.setBorder(null);
        TxtSalary.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                TxtSalaryAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        TxtSalary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtSalaryKeyReleased(evt);
            }
        });
        jPanel6.add(TxtSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 200, 190, 30));

        jSeparator16.setBackground(new java.awt.Color(31, 58, 147));
        jSeparator16.setForeground(new java.awt.Color(31, 58, 147));
        jSeparator16.setOpaque(true);
        jPanel6.add(jSeparator16, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, 190, -1));

        jLabelEmployeeName.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabelEmployeeName.setForeground(new java.awt.Color(31, 58, 147));
        jLabelEmployeeName.setText("Employee Name");
        jPanel6.add(jLabelEmployeeName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 140, 30));

        jLabelDesignation.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabelDesignation.setForeground(new java.awt.Color(31, 58, 147));
        jLabelDesignation.setText("Designation");
        jPanel6.add(jLabelDesignation, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 100, 30));

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(31, 58, 147));
        jLabel6.setText("Join Date");
        jPanel6.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 150, 140, 30));

        jRadioButtonSingle.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButtonSingle.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jRadioButtonSingle.setForeground(new java.awt.Color(31, 58, 147));
        jRadioButtonSingle.setText("Single");
        jRadioButtonSingle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSingleActionPerformed(evt);
            }
        });
        jPanel6.add(jRadioButtonSingle, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 250, 80, -1));

        jLabel14.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(31, 58, 147));
        jLabel14.setText("Address");
        jPanel6.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, 100, 30));

        jLabel17.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(31, 58, 147));
        jLabel17.setText("Gender");
        jPanel6.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 250, 100, 30));

        DatePickerJoinDate.setForeground(new java.awt.Color(31, 58, 147));
        DatePickerJoinDate.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 14)); // NOI18N
        DatePickerJoinDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DatePickerJoinDateActionPerformed(evt);
            }
        });
        jPanel6.add(DatePickerJoinDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 152, 190, 30));
        jPanel6.add(TextFieldDateOfBirth, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 200, 190, 30));

        add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 810, 310));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Working Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Light", 1, 14))); // NOI18N
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(31, 58, 147));
        jLabel15.setText("Over Time Rate");
        jPanel7.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 120, 30));

        jLabel16.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(31, 58, 147));
        jLabel16.setText("Late Hours Rate");
        jPanel7.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 130, 30));

        jSeparator21.setBackground(new java.awt.Color(31, 58, 147));
        jSeparator21.setForeground(new java.awt.Color(31, 58, 147));
        jSeparator21.setOpaque(true);
        jPanel7.add(jSeparator21, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 60, -1));

        LhrTxt.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        LhrTxt.setForeground(new java.awt.Color(31, 58, 147));
        LhrTxt.setBorder(null);
        LhrTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LhrTxtActionPerformed(evt);
            }
        });
        LhrTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                LhrTxtKeyReleased(evt);
            }
        });
        jPanel7.add(LhrTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 60, 30));

        OtrTxt.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        OtrTxt.setForeground(new java.awt.Color(31, 58, 147));
        OtrTxt.setBorder(null);
        OtrTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OtrTxtActionPerformed(evt);
            }
        });
        OtrTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                OtrTxtKeyReleased(evt);
            }
        });
        jPanel7.add(OtrTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, 60, 30));

        jSeparator22.setBackground(new java.awt.Color(31, 58, 147));
        jSeparator22.setForeground(new java.awt.Color(31, 58, 147));
        jSeparator22.setOpaque(true);
        jPanel7.add(jSeparator22, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 60, -1));

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 10)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(31, 58, 147));
        jLabel10.setText("Per one hour");
        jPanel7.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 70, 20));

        jLabel18.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 10)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(31, 58, 147));
        jLabel18.setText("Per one hour");
        jPanel7.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 70, 20));

        add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 230, 220, 180));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Employee List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Light", 1, 14))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTableEmployee.setForeground(new java.awt.Color(31, 58, 147));
        jTableEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "            EID", "          Name ", "        Dsignation ", "        Salary        ", "       Status ", "      Address ", "    Contact No. ", "    Join Date ", "   Date Of Birth ", "       Gender ", "  Late Hours Rate ", "  Over Time Rate "
            }
        ));
        jScrollPane2.setViewportView(jTableEmployee);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 1040, 150));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 470, 1060, 210));
    }// </editor-fold>//GEN-END:initComponents

    private void SavebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavebtnActionPerformed
       EmployeeDTO employee = null;
     if(validation()){
        employee = new EmployeeDTO(
                TxtEmployeeId.getText(),
                TxtEmpName.getText(),
                designationId,
                Double.parseDouble( TxtSalary.getText()),
                mStatus,
                TxtAddress.getText(),
                TxtContactNum.getText(),
                joinDate,
                TextFieldDateOfBirth.getDate().toString(),
                gender,
                Double.parseDouble(LhrTxt.getText()),
                Double.parseDouble(OtrTxt.getText())
                );
     }else{
         JOptionPane.showMessageDialog(this, "Please fill empty fields");
     }
        
        if(!update){
            try {
                boolean result = EmployeeRegisterController.addEmployee(employee);
                if(validation()){
                    if (result){
                        JOptionPane.showMessageDialog(this, "Saved successfully");
                        clearTextFields();
                        LoadTblAllEmployees();
                        generateEmployeeId();
                    }else{
                        JOptionPane.showMessageDialog(this, "Failed to save the Employee");
                    } 
                } 
            } catch (Exception ex) {
                Logger.getLogger(EmployeeRegister.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            
            try {
                if (jTableEmployee.getSelectedRow() == -1) return;
                    if(jRadioButtonMale.isSelected()){
                        gender = "Male";
                    }else{
                        gender = "Femail";
                    }

                    if(jRadioButtonMarried.isSelected()){
                        mStatus = "Married";
                    }else{
                        mStatus = "Single";
                    }              
                EmployeeDTO employeeUpdated = new EmployeeDTO(
                    TxtEmployeeId.getText(),
                    TxtEmpName.getText(),
                    designationId,
                    Double.parseDouble( TxtSalary.getText()),
                    TxtAddress.getText(),
                    TxtContactNum.getText(),
                    Double.parseDouble(LhrTxt.getText()),
                    Double.parseDouble(OtrTxt.getText()));
        
                boolean result = EmployeeRegisterController.updateEmployee(employeeUpdated);
               
                if (result){
                    JOptionPane.showMessageDialog(this, "Updated Successfully");
                    clearTextFields();
                    LoadTblAllEmployees();
                    generateEmployeeId();
                }else{
                    JOptionPane.showMessageDialog(this, "Failed to Update The Employee");
                }
            } catch (Exception ex) {
                Logger.getLogger(EmployeeRegister.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_SavebtnActionPerformed
   
    private void DeletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletebtnActionPerformed
       try {
            if (jTableEmployee.getSelectedRow() == -1) return;
            
            boolean result = EmployeeRegisterController.deleteEmployee(jTableEmployee.getValueAt(jTableEmployee.getSelectedRow(), 0).toString());
            
            if (result){
                JOptionPane.showMessageDialog(this, "Deleted Successfully");
            }else{
                JOptionPane.showMessageDialog(this, "Failed to Delete The Employee");
            }
            
            clearTextFields();
            jTableEmployee.getSelectionModel().clearSelection();
            LoadTblAllEmployees();
            update = false;
            
        } catch (Exception ex) {
            Logger.getLogger(EmployeeRegister.class.getName()).log(Level.SEVERE, null, ex);
        }
        
         
    }//GEN-LAST:event_DeletebtnActionPerformed

    private void BtnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnClearActionPerformed
        update = false;

        clearTextFields();
    }//GEN-LAST:event_BtnClearActionPerformed

    private void ComboBoxDesignationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxDesignationActionPerformed
        designation = ComboBoxDesignation.getSelectedItem().toString();
        selectedDesignation = designations.get(ComboBoxDesignation.getSelectedIndex());
       // designationId = selectedDesignation.getId();
        designationId = designation;

        TxtSalary.requestFocus(true);
    }//GEN-LAST:event_ComboBoxDesignationActionPerformed

    private void TxtContactNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtContactNumActionPerformed
       String contactNumber=TxtContactNum.getText();
       if(contactNumber.matches("[0-9]{10}")){
           DatePickerJoinDate.requestFocus();
       }else{
           JOptionPane.showMessageDialog(this, "Please Enter Phone Number Correct Form"); 
       }
    }//GEN-LAST:event_TxtContactNumActionPerformed

    private void TxtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtAddressActionPerformed
        TxtContactNum.requestFocus();
        /*jRadioButtonMale.requestFocus(true);
        jRadioButtonFemale.requestFocus(false);
        jRadioButtonMale.requestFocus(false);
        jRadioButtonFemale.requestFocus(true);*/
    }//GEN-LAST:event_TxtAddressActionPerformed

    private void jRadioButtonFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonFemaleActionPerformed
        // TODO add your handling code here:
        gender = "Female";
        LhrTxt.requestFocus();
    }//GEN-LAST:event_jRadioButtonFemaleActionPerformed

    private void TxtEmployeeIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtEmployeeIdActionPerformed
        TxtEmpName.requestFocus();
    }//GEN-LAST:event_TxtEmployeeIdActionPerformed

    private void jRadioButtonMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMaleActionPerformed
        // TODO add your handling code here:
        gender = "Male";
        LhrTxt.requestFocus();
    }//GEN-LAST:event_jRadioButtonMaleActionPerformed

    private void TxtEmpNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtEmpNameActionPerformed
        ComboBoxDesignation.requestFocus();
    }//GEN-LAST:event_TxtEmpNameActionPerformed

    private void jRadioButtonMarriedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMarriedActionPerformed
        mStatus = "Married";
        TxtAddress.requestFocus();
    }//GEN-LAST:event_jRadioButtonMarriedActionPerformed

    private void TxtSalaryAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TxtSalaryAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtSalaryAncestorAdded

    private void jRadioButtonSingleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSingleActionPerformed
        mStatus="Single";
        TxtAddress.requestFocus();
    }//GEN-LAST:event_jRadioButtonSingleActionPerformed

    private void LhrTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LhrTxtActionPerformed
        OtrTxt.requestFocus();
    }//GEN-LAST:event_LhrTxtActionPerformed

    private void OtrTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OtrTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OtrTxtActionPerformed

    private void DatePickerJoinDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DatePickerJoinDateActionPerformed
        joinDate =    ""+ new java.sql.Date( DatePickerJoinDate.getDate().getTime());
        TextFieldDateOfBirth.requestFocus();
    }//GEN-LAST:event_DatePickerJoinDateActionPerformed

    private void TxtEmpNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtEmpNameKeyReleased
        String txt = TxtEmpName.getText();
        int caretPosition = TxtEmpName.getCaretPosition();
        if (!txt.matches("^[A-Za-z//]*$")) {
            TxtEmpName.setText(txt.substring(0, caretPosition - 1) + txt.substring(caretPosition));
            TxtEmpName.setCaretPosition(caretPosition - 1);
        }
    }//GEN-LAST:event_TxtEmpNameKeyReleased

    private void TxtContactNumKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtContactNumKeyReleased
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
        }
        String txt = TxtContactNum.getText();
        int caretPosition = TxtContactNum.getCaretPosition();
        if (!txt.matches("^[0-9]{0,10}$")) {
            txt = txt.substring(0, caretPosition - 1) + txt.substring(caretPosition);
            TxtContactNum.setText(txt);
            TxtContactNum.setCaretPosition(caretPosition - 1);
        }
    }//GEN-LAST:event_TxtContactNumKeyReleased

    private void TxtContactNumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtContactNumKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtContactNumKeyPressed

    private void TxtAddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtAddressKeyReleased
       String txt = TxtAddress.getText();
        int caretPosition = TxtAddress.getCaretPosition();
        if (!txt.matches("^[A-Za-z//]*$")) {
            TxtAddress.setText(txt.substring(0, caretPosition - 1) + txt.substring(caretPosition));
            TxtAddress.setCaretPosition(caretPosition - 1);
        }
    }//GEN-LAST:event_TxtAddressKeyReleased

    private void TxtSalaryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtSalaryKeyReleased
        String txt = TxtSalary.getText();
        int caretPosition = TxtSalary.getCaretPosition();
        if (!txt.matches("^[\\d]*")) {
            TxtSalary.setText(txt.substring(0, caretPosition - 1) + txt.substring(caretPosition));
            TxtSalary.setCaretPosition(caretPosition - 1);
        }
    }//GEN-LAST:event_TxtSalaryKeyReleased

    private void LhrTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LhrTxtKeyReleased
        String txt = LhrTxt.getText();
        int caretPosition = LhrTxt.getCaretPosition();
        if (!txt.matches("^[\\d]*")) {
            LhrTxt.setText(txt.substring(0, caretPosition - 1) + txt.substring(caretPosition));
            LhrTxt.setCaretPosition(caretPosition - 1);
        }
    }//GEN-LAST:event_LhrTxtKeyReleased

    private void OtrTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_OtrTxtKeyReleased
        String txt = OtrTxt.getText();
        int caretPosition = OtrTxt.getCaretPosition();
        if (!txt.matches("^[\\d]*")) {
            OtrTxt.setText(txt.substring(0, caretPosition - 1) + txt.substring(caretPosition));
            OtrTxt.setCaretPosition(caretPosition - 1);
        }
    }//GEN-LAST:event_OtrTxtKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnClear;
    private javax.swing.JComboBox<String> ComboBoxDesignation;
    private org.jdesktop.swingx.JXDatePicker DatePickerJoinDate;
    private javax.swing.JButton Deletebtn;
    private javax.swing.JTextField LhrTxt;
    private javax.swing.JTextField OtrTxt;
    private javax.swing.JButton Savebtn;
    private com.toedter.calendar.JDateChooser TextFieldDateOfBirth;
    private javax.swing.JTextField TxtAddress;
    private javax.swing.JTextField TxtContactNum;
    private javax.swing.JTextField TxtEmpName;
    private javax.swing.JTextField TxtEmployeeId;
    private javax.swing.JTextField TxtSalary;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelDesignation;
    private javax.swing.JLabel jLabelEmployeeID;
    private javax.swing.JLabel jLabelEmployeeName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JRadioButton jRadioButtonFemale;
    private javax.swing.JRadioButton jRadioButtonMale;
    private javax.swing.JRadioButton jRadioButtonMarried;
    private javax.swing.JRadioButton jRadioButtonSingle;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator19;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator21;
    private javax.swing.JSeparator jSeparator22;
    private javax.swing.JSeparator jSeparator4;
    private org.jdesktop.swingx.JXTable jTableEmployee;
    private java.awt.ScrollPane scrollPane1;
    // End of variables declaration//GEN-END:variables

    private void groupButtonGrnder() {
        btng=new ButtonGroup();
        
        btng.add(jRadioButtonMale);
        btng.add(jRadioButtonFemale);
        
        
    }

    private void LoadEmployeeDesignations(){
        try {
            designations = DesignationController.getAllEmpDesignations();
            Vector model = new Vector();
            
            for (DesignationDTO designation : designations) {
              ComboBoxDesignation.addItem(designation.getName());
               model.addElement(new DesignationDTO(designation.getId(), designation.getName()));
            }
        } catch (Exception ex) {
            Logger.getLogger(EmployeeRegister.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void LoadTblAllEmployees() {
       try {
            ArrayList<EmployeeDTO> allEmployees= EmployeeRegisterController.getAllEmployees();
            
            dtm = (DefaultTableModel) jTableEmployee.getModel();
            dtm.setRowCount(0);
            
            for (EmployeeDTO employee : allEmployees) {
                Object[] rowData = {
                    employee.getId(),
                    employee.getName(),
                    employee.getDesignation(),
                    employee.getSalary(),
                    employee.getStatus(),
                    employee.getAddress(),
                    employee.getContactNo(),
                    employee.getJoinDate(),
                    employee.getDob(),
                    employee.getGender(),
                    employee.getLateHoursRate(),
                    employee.getOverTimeHoursRate()
                    
                };
                dtm.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(EmployeeRegister.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    private void groupButtonStatus() {
        bg=new ButtonGroup();
        
        bg.add(jRadioButtonMarried);
        bg.add(jRadioButtonSingle);
    }

    private void clearTextFields() {
        TxtEmployeeId.setText("");
        TxtEmpName.setText("");
        TxtSalary.setText("");
        TxtAddress.setText("");
        TxtContactNum.setText("");
        DatePickerJoinDate.setDate(null);
        TextFieldDateOfBirth.setDate(null);
        LhrTxt.setText("");
        OtrTxt.setText("");
        bg.clearSelection();
        btng.clearSelection();
        
        
        
    }

    private void generateEmployeeId() {
        try {
            String employeeId;
            employeeId = IdGenerater.getNewID("employee", "Id", "E");
            TxtEmployeeId.setText(employeeId);
        } catch (SQLException ex) {
            Logger.getLogger(EmployeeRegister.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(EmployeeRegister.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private boolean validation(){
          
        if(TxtEmpName.getText().equals("") || TxtSalary.getText().equals("") || TxtAddress.getText().equals("") || TxtContactNum.getText().equals("") || LhrTxt.getText().equals("") || OtrTxt.getText().equals("")){
            return false;
        }else if(TxtEmpName.getText()== null || TxtSalary.getText()== null || TxtAddress.getText()== null || TxtContactNum.getText()== null || LhrTxt.getText()== null || OtrTxt.getText()== null){
            return false;
        }
        return true;
    }
    

}
